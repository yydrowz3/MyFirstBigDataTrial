<template>
  <div class="manage">
    <el-dialog
      :title="operateType === 'add' ? '新增用户' : '编辑用户'"
      v-model="isShow"
    >
      <admin-form
        :formLabel="operateFormLabel"
        :form="operateForm"
        :inline="false"
        ref="form"
      ></admin-form>
      <template v-slot:footer class="dialog-footer">
        <el-button @click="isShow = false">取消</el-button>
        <el-button type="primary" @click="confirm()">确认</el-button>
      </template>
    </el-dialog>
    <div class="manage-header">
      <el-button type="primary" @click="addUser()">新增</el-button>
      <admin-form
        :formLabel="formLabel"
        :form="searchForm"
        :inline="true"
        ref="form"
      >
        <el-button type="primary" @click="getList(searchForm.keyword)"
          >搜索</el-button
        >
      </admin-form>
    </div>
    <admin-table
      :tableData="tableData"
      :tableLabel="tableLabel"
      :config="config"
      @changePage="getList()"
      @edit="editUser()"
      @del="delUser()"
    ></admin-table>
  </div>
</template>

<script>
import AdminForm from '../../../components/admin/AdminForm.vue';
import AdminTable from '../../../components/admin/AdminTable.vue';
import { getUsers } from '../../../http/api.ts';
export default {
  name: 'Users',
  components: {
    AdminForm,
    AdminTable,
  },
  data() {
    return {
      operateType: 'add',
      isShow: false,
      operateFormLabel: [
        {
          model: 'nickName',
          label: '用户名',
          type: 'input',
        },
        {
          model: 'userName',
          label: '姓名',
          type: 'input',
        },
        {
          model: 'phoneNumber',
          label: '手机号',
          type: 'input',
        },
        {
          model: 'eMail',
          label: '邮箱',
          type: 'input',
        },
        {
          model: 'sex',
          label: '性别',
          type: 'radio',
          opts: [
            {
              label: '女',
              value: 0,
            },
            {
              label: '男',
              value: 1,
            },
          ],
        },
        {
          model: 'avatar',
          label: '头像',
          type: 'file',
        },
        {
          model: 'auth',
          label: '权限',
          type: 'radio',
          opts: [
            {
              label: '普通用户',
              value: 0,
            },
            {
              label: '管理员',
              value: 1,
            },
          ],
        },
      ],
      operateForm: {
        nickName: '',
        userName: '',
        phoneNumber: '',
        eMail: '',
        sex: 0,
        avatar: '',
        auth: 0,
      },
      formLabel: [
        {
          model: 'keyword',
          label: '',
          type: 'input',
        },
      ],
      searchForm: {
        keyword: '',
      },
      tableData: [],
      tableLabel: [
        {
          prop: 'nickName',
          label: '用户名',
        },
        {
          prop: 'userName',
          label: '姓名',
        },
        {
          prop: 'phoneNumber',
          label: '手机号',
        },
        {
          prop: 'eMail',
          label: '邮箱',
        },
        {
          prop: 'sexLabel',
          label: '性别',
        },
        {
          prop: 'authLabel',
          label: '权限',
        },
      ],
      config: {
        page: 1,
        total: 30,
      },
    };
  },
  methods: {
    confirm() {
      if (this.operateType === 'edit') {
        this.$http.post('/users/edit', this.operateForm).then((res) => {
          console.log(res);
          this.isShow = false;
          this.getList();
        });
      } else {
        this.$http.post('/users/add', this.operateForm).then((res) => {
          console.log(res);
          this.isShow = false;
          this.getList();
        });
      }
    },
    addUser() {
      this.isShow = true;
      this.operateType = 'add';
      this.operateForm = {
        nickName: '',
        userName: '',
        phoneNumber: '',
        eMail: '',
        sex: 0,
        avatar: '',
        auth: 0,
      };
    },
    getList(name = '') {
      this.config.loading = true;
      name ? (this.config.page = 1) : '';
      getUsers({
        page: this.config.page,
        name,
      }).then(({ data: res }) => {
        this.tableData = res.list.map((item) => {
          item.sexLabel = item.sex === 0 ? '女' : '男';
          item.authLabel = item.auth === 0 ? '普通用户' : '管理员';
          return item;
        });
        this.config.total = res.count;
        this.config.loading = false;
      });
    },
    editUser(row) {
      this.operateType = 'edit';
      this.isShow = true;
      this.operateForm = row;
    },
    delUser(row) {
      this.$confirm('此操作讲永久删除该用户，是否继续？', '提示', {
        confirmButtonText: '确认',
        cancelButtonText: '取消',
        type: 'warning',
      }).then(() => {
        const id = row.id;
        this.$http
          .get('user/del', {
            params: { id },
          })
          .then(() => {
            this.$message({
              type: 'success',
              message: '删除成功',
            });
            this.getList();
          });
      });
    },
  },
  created() {
    this.getList();
  },
};
</script>

<style lang="less" scoped>
.manage-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
</style>
