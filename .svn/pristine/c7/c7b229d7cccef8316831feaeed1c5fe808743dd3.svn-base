package com.gcsj.service.impl;

import com.gcsj.mapper.EnrInfoMapper;
import com.gcsj.pojo.EnrInfoStatis;
import com.gcsj.pojo.EnrollmentInfo;
import com.gcsj.service.EnrInfoService;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class EnrInfoServiceImpl implements EnrInfoService {

    @Autowired
    EnrInfoMapper enrPlanMapper;

    @Override
    public PageInfo<EnrollmentInfo> getEnrollmentPlanList(int pageNo, int pageSize) {

        PageHelper.startPage(pageNo,pageSize);  //只有紧跟在 PageHelper.startPage 方法后的第一个 MyBatis 的查询(select)方法会被分页
        List<EnrollmentInfo> list = enrPlanMapper.getEnrollmentPlansByPage();
        PageInfo<EnrollmentInfo> pageInfo = new PageInfo<>(list);   // 用PageInfo对结果进行包装

        return pageInfo;
    }

    @Override
    public PageInfo<EnrollmentInfo> getEnrollmentPlanList(int pageNo, int pageSize, String school, String profess,
                                                          String province) {
        System.out.println("param:school-profess-province");
        System.out.println(school);
        System.out.println(profess);
        System.out.println(province);
        if(school != null && school.equals("")){
            school = null;
        }
        if(profess != null && profess.equals("")){
            profess = null;
        }
        if(province != null && province.equals("")){
            province = null;
        }
        PageHelper.startPage(pageNo,pageSize);  //只有紧跟在 PageHelper.startPage 方法后的第一个 MyBatis 的查询(select)方法会被分页
        List<EnrollmentInfo> list = enrPlanMapper.getEnrollmentPlans(school, profess,province);
        PageInfo<EnrollmentInfo> pageInfo = new PageInfo<>(list);   // 用PageInfo对结果进行包装

        return pageInfo;
    }

    @Override
    public PageInfo<EnrollmentInfo> getEnrollmentPlanList(int pageNo, int PageSize, EnrollmentInfo queryCondition) {

        if(queryCondition == null){
            return this.getEnrollmentPlanList(pageNo,PageSize);
        }else{
            return this.getEnrollmentPlanList(pageNo,PageSize,queryCondition.getSchoolname(),
                    queryCondition.getProfess(),queryCondition.getProvince());
        }

    }

    @Override
    public List<EnrInfoStatis> getMajorStatis(String school, String province, boolean isDesc, int topn) {
        List<EnrInfoStatis> enrollPlanStatisList = null;
        if (isDesc){
            enrollPlanStatisList = enrPlanMapper.getTopNEnrollmentPlans(school,province,"desc",topn);
        }else{
            enrollPlanStatisList = enrPlanMapper.getTopNEnrollmentPlans(school,province,null,topn);
        }

        return enrollPlanStatisList;
    }

}
