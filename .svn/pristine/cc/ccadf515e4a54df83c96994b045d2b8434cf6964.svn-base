package com.gcsj.controller;


import com.alibaba.druid.util.StringUtils;
import com.gcsj.pojo.EnrInfoStatis;
import com.gcsj.pojo.EnrollmentInfo;
import com.gcsj.service.EnrInfoService;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.util.List;
import java.util.Map;

@ResponseBody
@Controller
public class  SelectController {

    @Autowired
    EnrInfoService enrInfoService;

    @RequestMapping("myquery.html")
    public String toEnrollMentPlanQuery(@RequestParam(value = "pageNo",defaultValue = "1") int pageNo,
                                        @RequestParam(value = "pageSize",defaultValue = "10") int pageSize,
                                        @RequestParam(value = "requery",defaultValue = "0") String requery,
                                        EnrollmentInfo enrollmentInfo,
                                        Model model, HttpSession session){

        PageInfo<EnrollmentInfo> pageInfo = null;

        System.out.println("queryCondition="+enrollmentInfo);
        System.out.println(pageNo);

        if(requery.equals("1")){
            session.removeAttribute("queryCondition");
        }
        EnrollmentInfo queryCondition = (EnrollmentInfo) session.getAttribute("queryCondition");

        System.out.println("session:querycondition="+queryCondition);

        if(queryCondition == null){

            if((enrollmentInfo.getProfess() == null || enrollmentInfo.getProfess().equals(""))
                    &&(enrollmentInfo.getProvince() == null || enrollmentInfo.getProvince().equals(""))
                    &&(enrollmentInfo.getSchoolname() == null || enrollmentInfo.getSchoolname().equals(""))){
                pageInfo = enrInfoService.getEnrollmentPlanList(pageNo,pageSize);

            }else{
                queryCondition = enrollmentInfo;
                pageInfo = enrInfoService.getEnrollmentPlanList(pageNo,pageSize,queryCondition);
                session.setAttribute("queryCondition",queryCondition);
            }
        }else{
            pageInfo = enrInfoService.getEnrollmentPlanList(pageNo,pageSize,queryCondition);
            session.setAttribute("queryCondition",queryCondition);
        }


        model.addAttribute("pageInfo",pageInfo);
        //session.setAttribute("queryCondition",queryCondition);

        return "myquery";

    }

    @RequestMapping("topnmax-index.html")
    public String hotTopNQuery(String school,String province,Model model){
        System.out.println("to hot top n query>>>>>");
        System.out.println("school=" +school);
        System.out.println("province="+province);
        if(school != null && school.trim().equals("")){
            school = null;
        }
        if(province != null && province.trim().equals("")){
            province = null;
        }

        List<EnrInfoStatis> enrollPlanStatisList = enrInfoService.getMajorStatis(school,province,true,10);

        System.out.println(enrollPlanStatisList);
        model.addAttribute("enrollPlanStatisList",enrollPlanStatisList);

        return "topnmax-index";
    }

    @RequestMapping("topnmin-index.html")
    public String topnCoolNQuery(String school,String province,Model model){
        System.out.println("to cool top n query>>>>>");
        System.out.println("school=" +school);
        System.out.println("province="+province);
        if(school != null && school.trim().equals("")){
            school = null;
        }
        if(province != null && province.trim().equals("")){
            province = null;
        }

        List<EnrInfoStatis> enrollPlanStatisList = enrInfoService.getMajorStatis(school,province,false,10);

        System.out.println(enrollPlanStatisList);
        model.addAttribute("enrollPlanStatisList",enrollPlanStatisList);

        return "topnmin-index";
    }
}
