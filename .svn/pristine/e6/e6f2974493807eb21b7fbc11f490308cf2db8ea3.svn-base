<template>
  <div>
    <div class="select-box">
      <el-form :inline="true" :model="selectData" class="demo-form-inline">
        <el-form-item label="学校名称">
          <el-input v-model="selectData.schoolName" placeholder="请输入学校名称" />
        </el-form-item>
        <el-form-item label="专业名称">
          <el-input v-model="selectData.profess" placeholder="请输入专业名称" />
        </el-form-item>
        <el-form-item>
          <el-button type="success" @click="onQuery">查询</el-button>
        </el-form-item>
      </el-form>
    </div>
    <div>
      <el-table border :data="infoPageList[selectData.page]" style="width: 100%" stripe>
        <el-table-column prop="id" label="ID" />
        <el-table-column prop="schoolCode" label="学校代码" />
        <el-table-column prop="schoolName" label="学校名称" />
        <el-table-column prop="province" label="省份" />
        <el-table-column prop="majorCode" label="专业代码" />
        <el-table-column prop="profess" label="专业名称" />
        <el-table-column prop="subject" label="专业类别" />
        <el-table-column prop="batch" label="录取批次" />
        <el-table-column prop="plan" label="招生人数" />
        <el-table-column fixed="right" label="操作" width="160">
          <template #default="scope">
            <el-button round type="primary" @click="editInfo(scope.row)">编辑</el-button>
            <el-button round type="danger" @click="deleteInfo(scope.row)">删除</el-button>
          </template>
        </el-table-column>
      </el-table>
      <el-pagination background @current-change="currentChange" layout="prev, pager, next" :total="selectData.count"
        class="pagination" />
    </div>
  </div>
</template>

<script lang="ts">
import { defineComponent, reactive, toRefs, onMounted } from 'vue';
import { InitData, SchoolInfoListInt } from '@/types/admin/schoolInfo';
import { getSchoolInfo } from '@/http/adminApi';

export default defineComponent({
  setup() {
    const data = reactive(new InitData());
    // const data = reactive({})
    onMounted(() => {
      
      getSchoolInfo({ pageNum: 1, pageSize: 10 }).then((res) => {
        data.selectData.count = res.data.tatalSize;

        data.infoTotalList = res.data.content;

        sliceData(data.infoTotalList)
        console.log(data);
         

      }).catch(
        (err) => {
          console.log(err);

        }
      )
    });
    const sliceData = (totalList: SchoolInfoListInt[]) => {
      console.log(totalList);
      data.infoPageList = [];
      for (let index = 0; index < totalList.length; index += 10) {
        // data.list.push(arr.slice(index, index + 10));
        let list: any = totalList.slice(index, index + 10);
        data.infoPageList.push(list);
      }
    };

    const currentChange = (page: number) => {
      data.selectData.page = page;
    };
    const onQuery = () => {
      console.log(data.selectData);
      let tempData: SchoolInfoListInt[] = [];
      if (data.selectData.schoolName || data.selectData.profess) {
        if (data.selectData.schoolName && !data.selectData.profess) {
          tempData = data.infoTotalList.filter(
            (v) => v.schoolName.indexOf(data.selectData.schoolName) != -1
          );
        } else if (!data.selectData.schoolName && data.selectData.profess) {
          tempData = data.infoTotalList.filter(
            (v) => v.profess.indexOf(data.selectData.profess) != -1
          );
        } else {
          tempData = data.infoTotalList.filter(
            (v) => v.schoolName.indexOf(data.selectData.schoolName) != -1
          );
          tempData = tempData.filter(
            (v) => v.profess.indexOf(data.selectData.profess) != -1
          );
        }
      } else {
        tempData = data.infoTotalList;
      }
      sliceData(tempData);
    };

    const editInfo = (row: SchoolInfoListInt) => {
      console.log(row);
    };
    const deleteInfo = (row: SchoolInfoListInt) => {
      console.log(row);
    };

    return {
      ...toRefs(data),
      onMounted,
      currentChange,
      onQuery,
      editInfo,
      deleteInfo,
    };
  },
});
</script>

<style scoped>
.pagination {
  float: right;
  margin-top: 10px;
}
</style>
